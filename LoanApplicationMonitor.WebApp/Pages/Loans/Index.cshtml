@page
@using System.Text.Json
@model LoanApplicationMonitor.WebApp.Pages.Loans.IndexModel
@{
    ViewData["Title"] = "Loans";
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}

<h2>Loans</h2>

<button class="btn btn-primary mb-3" onclick="openModal()">Add Loan</button>
<br />

<!-- Search -->
<form method="get" class="mb-3">
    <div class="row g-2 align-items-end">
        <div class="col-md-3">
            <label for="LoanType" class="form-label">Loan Type</label>
            <input type="text" name="LoanType" class="form-control" value="@Request.Query["LoanType"]" />
        </div>
        <div class="col-md-3">
            <label for="LoanRequestReason" class="form-label">Request Reason</label>
            <input type="text" name="LoanRequestReason" class="form-control" value="@Request.Query["LoanRequestReason"]" />
        </div>
        <div class="col-md-3">
            <label for="LoanAmount" class="form-label">Amount</label>
            <input type="number" name="LoanAmount" class="form-control" value="@Request.Query["LoanAmount"]" />
        </div>
        <div class="col-md-3">
            <label for="AdminComments" class="form-label">Comments</label>
            <input type="text" name="AdminComments" class="form-control" value="@Request.Query["AdminComments"]" />
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Search</button>
            <a asp-page="./Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>
</form>

@if (!Model.Loans.Any())
{
    <p>No loans found.</p>
}
else
{
    <table class="table" id="loansTable">
        <thead>
            <tr>
                <th>Select</th>
                <th>Applicant</th>
                <th>Credit Score</th>
                <th>Loan Type</th>
                <th>Request Reason</th>
                <th>Amount</th>
                <th>Comments</th>
                <th>Updated At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in Model.Loans)
            {
                <tr id="@loan.loanId" data-loan='@System.Text.Json.JsonSerializer.Serialize(loan, new System.Text.Json.JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase })'>
                    <td><input type="checkbox" class="compare-checkbox" /></td>
                    <td>@loan.applicantFullName</td>
                    <td class="field-creditScore">@loan.creditScore</td>
                    <td class="field-loanType">@loan.loanType</td>
                    <td class="field-requestReason">@loan.loanRequestReason</td>
                    <td class="field-amount">@loan.loanAmount</td>
                    <td class="field-comments">@loan.adminComments</td>
                    <td>@loan.updatedTime</td>
                    <td>
                        <button class="btn btn-warning btn-sm" type="button" onclick='openModal(@Html.Raw(System.Text.Json.JsonSerializer.Serialize(loan, new System.Text.Json.JsonSerializerOptions { PropertyNamingPolicy = null })))'>Edit</button>
                        <form method="post" asp-page-handler="Delete" style="display:inline;">
                            <input type="hidden" name="id" value="@loan.loanId" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="modal" tabindex="-1" id="loanModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Create Loan</h5>
                <button type="button" class="btn-close" onclick="closeModal()"></button>
            </div>

            <!-- Create Modal -->
            <form method="post" asp-page-handler="Create" id="createForm">
                <div class="modal-body">
                    <input type="hidden" name="loanId" />
                    <div class="mb-3">
                        <label class="form-label">Applicant Name</label>
                        <input type="text" class="form-control" name="ApplicantFullName" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Loan Type</label>
                        <input type="text" class="form-control" name="LoanType" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Request Reason</label>
                        <input type="text" class="form-control" name="LoanRequestReason" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Loan Amount</label>
                        <input type="number" class="form-control" name="LoanAmount" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Admin Comments</label>
                        <input type="text" class="form-control" name="AdminComments" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Credit Score</label>
                        <input type="number" class="form-control" name="CreditScore" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>

            <!-- Update -->
            <form method="post" asp-page-handler="Update" id="updateForm" style="display:none;">
                <div class="modal-body">
                    <input type="hidden" name="loanId" id="updateLoanId" />
                    <div class="mb-3">
                        <label class="form-label">Applicant Name</label>
                        <input type="text" class="form-control" id="updateApplicantName" name="ApplicantFullName" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Loan Type</label>
                        <input type="text" class="form-control" id="updateLoanType" name="LoanType" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Request Reason</label>
                        <input type="text" class="form-control" id="updateLoanRequestReason" name="LoanRequestReason" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Loan Amount</label>
                        <input type="number" class="form-control" id="updateLoanAmount" name="LoanAmount" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Admin Comments</label>
                        <input type="text" class="form-control" id="updateAdminComments" name="AdminComments" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Credit Score</label>
                        <input type="number" class="form-control" id="updateCreditScore" name="CreditScore" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                    <button type="button" class="btn btn-info" onclick="copyAsNew()">Copy as New</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Pagination Controls -->
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
        </li>
    </ul>
</nav>

@section Scripts {
    <script>
        let modal = document.getElementById("loanModal");
        let createForm = document.getElementById("createForm");
        let updateForm = document.getElementById("updateForm");

        document.addEventListener("DOMContentLoaded", () => {
            const checkboxes = document.querySelectorAll(".compare-checkbox");

            checkboxes.forEach(cb => cb.addEventListener("change", handleCompareSelection));

            function handleCompareSelection() {
                const selected = Array.from(document.querySelectorAll(".compare-checkbox:checked"));

                // Clear any existing row highlights
                document.querySelectorAll("#loansTable tr").forEach(tr => tr.classList.remove("active-compare-row"));
                document.querySelectorAll("#loansTable td").forEach(td => td.classList.remove("match-cell"));

                // If more than 2 are selected, keep only the last 2 checked
                if (selected.length > 2) {
                    checkboxes.forEach(cb => cb.checked = false);
                    selected.slice(-2).forEach(cb => cb.checked = true);
                }

                // Get final selected rows
                const finalSelected = Array.from(document.querySelectorAll(".compare-checkbox:checked"));
                if (finalSelected.length !== 2) return;

                const [rowA, rowB] = finalSelected.map(cb => cb.closest("tr"));
                const loanA = JSON.parse(rowA.dataset.loan);
                const loanB = JSON.parse(rowB.dataset.loan);

                rowA.classList.add("active-compare-row");
                rowB.classList.add("active-compare-row");

                const fieldSelectors = {
                    loanAmount: ".field-amount",
                    creditScore: ".field-creditScore",
                    loanType: ".field-loanType",
                    loanRequestReason: ".field-requestReason",
                    adminComments: ".field-comments"
                };

                for (const [key, selector] of Object.entries(fieldSelectors)) {
                    const valueA = (loanA[key] ?? "").toString().trim();
                    const valueB = (loanB[key] ?? "").toString().trim();

                    // Highlight if both non-empty and match
                    if (valueA && valueB && valueA.toLowerCase() === valueB.toLowerCase()) {
                        const cellA = rowA.querySelector(selector);
                        const cellB = rowB.querySelector(selector);
                        if (cellA && cellB) {
                            cellA.classList.add("match-cell");
                            cellB.classList.add("match-cell");
                        }
                    }
                }
            }
        });

        function openModal(loan = null) {
            modal.style.display = "block";

            if (loan) {
                // Edit mode
                document.getElementById("modalTitle").innerText = "Update Loan";
                createForm.style.display = "none";
                updateForm.style.display = "block";

                document.getElementById("updateLoanId").value = loan.loanId;
                document.getElementById("updateApplicantName").value = loan.applicantFullName;
                document.getElementById("updateLoanType").value = loan.loanType;
                document.getElementById("updateLoanRequestReason").value = loan.loanRequestReason;
                document.getElementById("updateLoanAmount").value = loan.loanAmount;
                document.getElementById("updateAdminComments").value = loan.adminComments;
                document.getElementById("updateCreditScore").value = loan.creditScore;
            } else {
                // Create mode
                document.getElementById("modalTitle").innerText = "Create Loan";
                createForm.style.display = "block";
                updateForm.style.display = "none";
            }
        }

        function closeModal() {
            modal.style.display = "none";
        }

        function copyAsNew() {
            // Get data from update form
            const loanType = document.getElementById("updateLoanType").value;
            const loanRequestReason = document.getElementById("updateLoanRequestReason").value;
            const loanAmount = document.getElementById("updateLoanAmount").value;
            const adminComments = document.getElementById("updateAdminComments").value;
            const creditScore = document.getElementById("updateCreditScore").value;

            // Switch modal mode
            updateForm.style.display = "none";
            createForm.style.display = "block";
            document.getElementById("modalTitle").innerText = "Copy Loan Record";
            
            // Switch button text
            const createBtn = createForm.querySelector('button[type="submit"]');
            createBtn.textContent = "Save Copy";
            
            // Clear any existing loan ID just to be safe
            createForm.querySelector('input[name="loanId"]').value = "";

            // Prefill fields in create form
            createForm.querySelector('input[name="ApplicantFullName"]').value = "New Applicant Name"; 
            createForm.querySelector('input[name="LoanType"]').value = loanType;
            createForm.querySelector('input[name="LoanRequestReason"]').value = loanRequestReason;
            createForm.querySelector('input[name="LoanAmount"]').value = loanAmount;
            createForm.querySelector('input[name="AdminComments"]').value = adminComments;
            createForm.querySelector('input[name="CreditScore"]').value = creditScore;
        }
    </script>

    <style>
        /* Highlight cells with matching values */
        .match-cell {
            background-color: #fff3cd !important;
            transition: background-color 0.3s ease;
        }
    </style>
}